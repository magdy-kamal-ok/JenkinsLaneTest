xcversion(version: "10.1") 
xcode_select "/Applications/Xcode.app"
default_platform(:ios)
generated_fastfile_id "4303a121-f78f-4d6e-bb25-8c35c502949c"

platform :ios do

  before_all do
    ENV["FASTLANE_DONT_STORE_PASSWORD"] = "1"
    ENV["FASTLANE_USER"] = ""
    ENV["FASTLANE_PASSWORD"] = ""
  end
  
  desc "Description of what the lane does"
 
 lane :beta do

identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
team_id = CredentialsManager::AppfileConfig.try_fetch_value(:team_id)

  keychain_name = ENV["MATCH_KEYCHAIN_NAME"]
    keychain_password = ENV["MATCH_KEYCHAIN_PASSWORD"]

    # Create a temporary keychain to 
    # store the certificates.
    create_keychain(
      name: keychain_name,
      password: keychain_password,
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      add_to_search_list: true
    )

    # Fetch the necessary certificates and 
    # provisioning profiles.
    match(
      keychain_name: keychain_name,
      keychain_password: keychain_password,
      readonly: true
    )
    
    # Increment the build number using the
    # latest Testflight build number.
    increment_build_number(
      build_number: latest_testflight_build_number() + 1,
      xcodeproj: "./JenkensTest.xcodeproj"
    )

    # Build the application using the
    # specified scheme.
    build_app(scheme: "JenkensTest")

    # Upload the application to Testflight
    upload_to_testflight(
      skip_waiting_for_build_processing: true
    )

    # Remove the temporary keychain leaving
    # no trace.
    delete_keychain(
      name: keychain_name
    )
end
platform :ios do
  desc "Description of what the lane does"
 
 lane :beta do
  # build your iOS app
 # build_app(
  #  scheme: "JenkensTest",
  #  export_method: "ad-hoc"
  #)

  # upload to Testflight
  # crashlytics(
  #  api_token: "f4f66007d3a682ab7a6ecb4cd66aeacc886be80b",
   # build_secret: "e38d42eda67f4cedde95f0e2577e939dc2e8cefed98c1999bdc5290f045c6c37",
    #notes => File.read("../Changelog.txt")
  #)
identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
team_id = CredentialsManager::AppfileConfig.try_fetch_value(:team_id)
  build_app(
    scheme: "JenkensTest",
    export_method: "app-store"
  )

pilot(
     username: "ahmed.nour@apptcom.com",
     skip_submission: true
     )
  #pilot(skip_waiting_for_build_processing: true)
end

  lane :generate_ipa_develop do
    build_ios_app(
      configuration: "Release",
      scheme: "JenkensTest",
      clean: true,
      export_method: 'ad-hoc',
      output_directory: "~/Desktop", # Destination directory. Defaults to current directory.
      output_name: Time.now.strftime("%d/%m/%Y %H:%M").
concat(".ipa"),
    )
  end
  after_all do |lane|
 #lane :slack_message do
      slack(
            message: "App successfully released to Fabric Beta",
            slack_url: "https://hooks.slack.com/services/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",
            success: true,        
            # Optional,defaults to true.
            payload: {  # Optional, lets you specify any number of your own Slack attachments.
            "Build Date" => Time.new.to_s,
            "Release notes" => File.read("../Changelog.txt")
        },
        default_payloads: [], # Optional, lets you specify a whitelist of default payloads to include. Pass an empty array to suppress all the default payloads.
        # Don't add this key, or pass nil, if you want all the default payloads. The available default payloads are: `lane`, `test_result`, `git_branch`, `git_author`, `last_git_commit`, `last_git_commit_hash`.
       )
  end
  lane :mail_message do
      mailgun(
      to: "magdy.kamal@apptcom.com",
      success: true,
      message: "This is the mail's content"
      )
  end
  
end